package pwui

import "github.com/nathan-hello/nat-auth/auth/providers/password"

templ Change(theme Theme, copy PasswordUICopy, errCopy PasswordUIErrorCopy, state password.FormState, err password.BitError) {
	@layout(theme) {
		<form data-component="form" method="post">
			if err != 0 {
				@formAlert(errCopy, err, "danger")
			}
			if state.Type == "start" {
				@changeFormStart(copy, state)
			}
			if state.Type == "code" {
				@codeForm(copy)
			}
			if state.Type == "update" {
				@changeFormUpdate(copy, state, err)
			}
			<button data-component="button">{ copy.ButtonContinue }</button>
		</form>
		if state.Type == "code" {
			<form method="post">
				<input type="hidden" name="action" value="code"/>
				<input type="hidden" name="email" value={ state.Username }/>
				<div data-component="form-footer">
					<span>
						{ copy.CodeReturn }
						<a data-component="link" href="/auth/login">
							{ copy.Login }
						</a>
					</span>
					<button data-component="link">{ copy.CodeResend }</button>
				</div>
			</form>
		}
	}
}

templ changeFormStart(copy PasswordUICopy, state password.FormState) {
	<input type="hidden" name="action" value="code"/>
	<input
		data-component="input"
		autofocus
		name="email"
		required
		if state.Username != "" {
			value={ state.Username }
		}
		placeholder={ copy.InputEmail }
	/>
}

templ changeFormUpdate(copy PasswordUICopy, state password.FormState, err password.BitError) {
	<input type="hidden" name="action" value="update"/>
	<input
		data-component="input"
		autofocus
		type="password"
		name="password"
		placeholder={ copy.InputPassword }
		required
		autocomplete="new-password"
	/>
	<input
		data-component="input"
		type="password"
		name="repeat"
		required
		placeholder={ copy.InputRepeat }
		autocomplete="new-password"
	/>
}