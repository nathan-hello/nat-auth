package pwui

import "github.com/nathan-hello/nat-auth/auth/providers/password"

templ Register(theme Theme, copy PasswordUICopy, errCopy PasswordUIErrorCopy, state password.FormState, err password.BitError) {
	@layout(theme) {
		<form data-component="form" method="post">
			if err != 0 {
				@formAlert(errCopy, err, "danger")
			}
			if state.Type == "start" {
				@registerForm(copy, errCopy, state, err)
			}
			if state.Type == "code" {
				@codeForm(copy)
			}
		</form>
	}
}

// 1) State is start. User puts in email, password, repeat.
//    - User is actually made in DB. TOTP is optional.
// 2) State is code. User either puts in TOTP or skips.
templ registerForm(copy PasswordUICopy, errorCopy PasswordUIErrorCopy, state password.FormState, err password.BitError) {
	<input type="hidden" name="action" value="register"/>
	<input
		data-component="input"
		autofocus={ err == 0 || err.IsUsernameError() }
		name="email"
		if state.Username != "" && !err.IsUsernameError() {
			value={ state.Username }
		}
		required
		placeholder={ copy.InputEmail }
	/>
	<input
		data-component="input"
		autofocus={ err.IsPasswordError() }
		type="password"
		name="password"
		placeholder={ copy.InputPassword }
		required
		autocomplete="new-password"
	/>
	<input
		data-component="input"
		type="password"
		name="repeat"
		required
		autofocus={ err.IsRepeatedError() }
		placeholder={ copy.InputRepeat }
		autocomplete="new-password"
	/>
	<button data-component="button">{ copy.ButtonContinue }</button>
	<div data-component="form-footer">
		<span>
			{ copy.LoginPrompt }
			<a data-component="link" href="/auth/login">
				{ copy.Login }
			</a>
		</span>
	</div>
}
