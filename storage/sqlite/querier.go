// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlite

import (
	"context"
)

type Querier interface {
	//InsertFamily
	//
	//  INSERT OR REPLACE INTO families (subject, family, valid) VALUES (?, ?, ?)
	InsertFamily(ctx context.Context, arg InsertFamilyParams) error
	//InsertSecret
	//
	//  INSERT OR REPLACE INTO secrets (subject, secret) VALUES (?, ?)
	InsertSecret(ctx context.Context, arg InsertSecretParams) error
	//InsertSubject
	//
	//  INSERT INTO subjects (username, subject) VALUES (?, ?)
	InsertSubject(ctx context.Context, arg InsertSubjectParams) error
	//InsertUser
	//
	//  INSERT INTO users (username, password) VALUES (?, ?)
	InsertUser(ctx context.Context, arg InsertUserParams) error
	//InvalidateUser
	//
	//  UPDATE families SET valid = FALSE WHERE subject = ?
	InvalidateUser(ctx context.Context, subject string) error
	//SelectFamily
	//
	//  SELECT valid FROM families WHERE subject = ? AND family = ?
	SelectFamily(ctx context.Context, arg SelectFamilyParams) (bool, error)
	//SelectPasswordByUsername
	//
	//  SELECT password FROM users WHERE username = ?
	SelectPasswordByUsername(ctx context.Context, username string) (string, error)
	//SelectSecret
	//
	//  SELECT secret FROM secrets WHERE subject = ?
	SelectSecret(ctx context.Context, subject string) (string, error)
	//SelectSubjectByUsername
	//
	//  SELECT subject FROM subjects WHERE username = ?
	SelectSubjectByUsername(ctx context.Context, username string) (string, error)
}

var _ Querier = (*Queries)(nil)
